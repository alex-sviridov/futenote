name: Frontend CI

on:
  push:
    branches: [ main ]
    paths: [ 'frontend/**', '.github/workflows/frontend-ci.yml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'frontend/**', '.github/workflows/frontend-ci.yml' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/frontend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: latest
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        registry-url: 'https://registry.npmmirror.com'

    - name: ðŸ“¥ Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: ESLint
      run: npm run lint
      working-directory: ./frontend


  security-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner for ./frontend
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './frontend'
          format: 'sarif'
          output: 'trivy-frontend-fs.sarif'
          severity: 'HIGH,CRITICAL'
          scanners: 'vuln,secret,misconfig'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-frontend-fs.sarif'

  test-and-build:
    needs: [security-scan]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: latest
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: ðŸ“¥ Install dependencies
      run: npm install
      working-directory: ./frontend

    - name: Test
      run: npm run test
      working-directory: ./frontend

    - name: Build
      run: npm run build
      working-directory: ./frontend


  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test-and-build, security-scan]
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}            
  
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max